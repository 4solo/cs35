#include<stdio.h>
#include<stdlib.h>
int rot13cmp(const void *s1,const void *s2)
{
  int i = 0;
  char* a =*(char**)s1;
  char* b =*(char**)s2;
  while (1)
    {
      if (a[i] == b[i] && a[i] == '\n')
      return 0;
      if (a[i] == '\n')
      return -1;
      if (b[i] == '\n')
      return 1;
      if (a[i] != b[i])
      {
	if ((a[i]<='z'&& a[i]>='a')&&(b[i]<='z'&& b[i]>='a'))
	  {
	    if((a[i]<='m'&&b[i]<='m')||(a[i]>'m'&&b[i]>'m'))
	      {
		return a[i] - b[i];
	      }
	    else
	      return 0-(a[i]-b[i]);
	  }
	else if((a[i]<='Z'&& a[i]>='A')&&(b[i]<='Z'&&b[i]>='A'))
	  {
	    if((a[i]<='M'&&b[i]<='M')||(a[i]>'M'&&b[i]>'M'))
	      return a[i] - b[i];
	    else
	      return 0-(a[i]-b[i]);
	  }
	else
	  return a[i] - b[i];
      }
      else 
	i++;
    }		      
}
int main()
{
  int size=1024;
  char* arr;
  arr=(char*) malloc(sizeof(char)*size);
  char tmp;
  int i=0;
  int number=1;
  tmp=getchar();
  while(tmp!=EOF)
    {
      arr[i]=tmp;
      tmp=getchar();
      if(tmp=='\n')
	{
	  number++;
	}
      i=i+1;
      //need more space;
      if (i>=size)
	{
	  //printf("%d",i);
	  size*=2;
	  arr=(char*)realloc(arr,sizeof(char)*size);
	  // printf("no space reallocing\n");
	}
    }
  int j;
  if(arr[i-1]!='\n')
    {
    arr[i]='\n';
    i++;
    }
  else
    number--;
  char** arr2;
  arr2=(char**)malloc(sizeof(char*)*number);
  int count=1;
  arr2[0]=&arr[0];
  for(j=0;j<i;j++)
    {
      if(arr[j]=='\n')
	{
	  if(j+1<i)
	  arr2[count]=&arr[j+1];
	  count++;
        }
    }
  // printf("\n");
  char word;
  qsort(arr2,number,sizeof(char*),rot13cmp);
  count=0;
  for(j=0;j<number;j++)
  {
    word=*(arr2[j]);
    while(word!='\n')
      {
	putchar(word);
	word=*(++arr2[j]);
      }
    putchar(word);
  }
  free(arr);
  free(arr2);
  return 0;  
}

